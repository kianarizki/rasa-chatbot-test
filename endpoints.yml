# This file contains the different endpoints your bot can use.

# Server where the models are pulled from.
# https://rasa.com/docs/rasa/model-storage#fetching-models-from-a-server

#models:
#  url: http://my-server.com/models/default_core@latest
#  wait_time_between_pulls:  10   # [optional](default: 100)

# Server which runs your custom actions.
# https://rasa.com/docs/rasa/custom-actions

# webhook:
#   url: "http://localhost:5005/webhooks/rest/webhook"

# Tracker store which is used to store the conversations.
# By default the conversations are stored in memory.
# https://rasa.com/docs/rasa/tracker-stores

# tracker_store:
#    type: redis
#    url: localhost
#    port: 6739
#    db: 0
#    record_exp: 60
#    use_ssl: false

#tracker_store:
#    type: mongod
#    url: <url to your mongo instance, e.g. mongodb://localhost:27017>
#    db: <name of the db within your mongo instance, e.g. rasa>
#    username: <username used for authentication>
#    password: <password used for authentication>

# Event broker which all conversation events should be streamed to.
# https://rasa.com/docs/rasa/event-brokers

#event_broker:
#  url: localhost
#  username: username
#  password: password
#  queue: queue

# event_broker:
#   type: kafka
#   partition_by_sender: True
#   security_protocol: PLAINTEXT
#   topic: chatbot-rasa
#   url: 148.113.16.35:19100
#   client_id: kafka-python-rasa

action_endpoint:
 url: "http://localhost:5055/webhook"

# tracker_store:
#     type: components.tracker_questdb.TestTrackerStore

# tracker_store:
#     type: sql
#     dialect: postgresql  
#     username: admin
#     password: quest
#     port: 8812
#     url: localhost
#     db: qdb.rasa_events
    # query: 
    #   driver: my-driver
